Random Forest in machine learning:-
supervised learning 
regression = numeric value and classfication = category
multiple desscion Tree = random forest & Time consuming

from sklearn import datasets

iris = datasets.load_iris()
iris

print(iris.target_names)
print(iris.feature_names)

import pandas as pd 
data = pd.DataFrame({"sepal length":iris.data[:,0],"sepal width":iris.data[:,1],"petal legth":iris.data[:2],"petal width":iris.data[:,3],"species":iris.target})

data

x= data[["sepal length","sepal width","petal length","petal width"]] # Features
y = data['species']

from sklearn.model_selection import train_test_split
x_train,x_test,y_train,y_test=train_test_split(x,y,test_size=0.3)
len(x_train)
len(x_test)

from sklearn.ensemble import RandomForestClassifier
clf = RandomForestClassifier(n_estimators=100,criterion='gini')
clf.fit(x_train,y_train)
clf.predict(x_test)
x_test
clf.score(x_test,y_test)

clf.predict[[3,5,4,2]])


important feature and remvoing = 

feature_imp = pd.Series(clf.feature_importances_,index=iris.feature_names).sort_values(ascending=False)

x=data[['petal length,'petal width','sepal length']]
y = data['species']
x_train,x_test,y_train,y_test = train_test_split(x,y,test_size=0.3)
clf = RandomForestClassifier()
clf.fit(x_train,y_train)
clf.predict(x_test)
clf.score(x_test,y_test)


