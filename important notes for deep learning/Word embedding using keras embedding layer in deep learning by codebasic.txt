import numpy as np
from tensorflow.keras.preprocessing.text import one_hot
from tensorflow.keras.preprocessing.sequence import pad_sequences
from tensorflow.keras.models import Sequential
from tensorflow.keras.layers import Dense
from tensorflow.keras.layers import Flatten
from tensorflow.keras.layers import Embedding

reviews = ['nice food',
        'amazing restaurant',
        'too good',
        'just loved it!',
        'will go again',
        'horrible food',
        'never go there',
        'poor service',
        'poor quality',
        'needs improvement']

len(reviews)

sentiment = np.array([1,1,1,1,1,0,0,0,0,0])

len(sentiment)

one_hot('amazing restaurant',50)

vocab_size = 50
encoded_reviews = [one_hot(d,vocab_size) for d in reviews]
encoded_reviews

max_length = 3
padded_reviews = pad_sequences(encoded_reviews,maxlen=max_length,padding='post')

padded_reviews

vocab_size = 50
embeded_vector_size = 4
model = Sequential()
model.add(Embedding(vocab_size,embeded_vector_size,input_length=max_length,name='embedding'))
model.add(Flatten())
model.add(Dense(1,activation='sigmoid'))

x = padded_reviews
y = sentiment

model.compile(optimizer='adam',loss='binary_crossentropy',metrics=['accuracy'])

model.summary()

model.fit(x,y,epochs=50,verbose=0)

loss,accuracy = model.evaluate(x,y)
accuracy

model.get_layer('embedding').get_weights()[0]

weights = model.get_layer('embedding').get_weights()[0]
len(weights)


weights[40] # nice

weights[21] # amazing

















